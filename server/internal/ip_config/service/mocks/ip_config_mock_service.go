// Code generated by MockGen. DO NOT EDIT.
// Source: ip_config_mock_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	dtos "mta-hosting-optimizer/server/internal/ip_config/service/dtos"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIPConfigMockService is a mock of IPConfigMockService interface.
type MockIPConfigMockService struct {
	ctrl     *gomock.Controller
	recorder *MockIPConfigMockServiceMockRecorder
}

// MockIPConfigMockServiceMockRecorder is the mock recorder for MockIPConfigMockService.
type MockIPConfigMockServiceMockRecorder struct {
	mock *MockIPConfigMockService
}

// NewMockIPConfigMockService creates a new mock instance.
func NewMockIPConfigMockService(ctrl *gomock.Controller) *MockIPConfigMockService {
	mock := &MockIPConfigMockService{ctrl: ctrl}
	mock.recorder = &MockIPConfigMockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPConfigMockService) EXPECT() *MockIPConfigMockServiceMockRecorder {
	return m.recorder
}

// GetIPConfigData mocks base method.
func (m *MockIPConfigMockService) GetIPConfigData() []dtos.IpConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIPConfigData")
	ret0, _ := ret[0].([]dtos.IpConfig)
	return ret0
}

// GetIPConfigData indicates an expected call of GetIPConfigData.
func (mr *MockIPConfigMockServiceMockRecorder) GetIPConfigData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIPConfigData", reflect.TypeOf((*MockIPConfigMockService)(nil).GetIPConfigData))
}
