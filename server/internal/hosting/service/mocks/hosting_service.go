// Code generated by MockGen. DO NOT EDIT.
// Source: hosting_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHostingService is a mock of HostingService interface.
type MockHostingService struct {
	ctrl     *gomock.Controller
	recorder *MockHostingServiceMockRecorder
}

// MockHostingServiceMockRecorder is the mock recorder for MockHostingService.
type MockHostingServiceMockRecorder struct {
	mock *MockHostingService
}

// NewMockHostingService creates a new mock instance.
func NewMockHostingService(ctrl *gomock.Controller) *MockHostingService {
	mock := &MockHostingService{ctrl: ctrl}
	mock.recorder = &MockHostingServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHostingService) EXPECT() *MockHostingServiceMockRecorder {
	return m.recorder
}

// GetHostNames mocks base method.
func (m *MockHostingService) GetHostNames() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHostNames")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetHostNames indicates an expected call of GetHostNames.
func (mr *MockHostingServiceMockRecorder) GetHostNames() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHostNames", reflect.TypeOf((*MockHostingService)(nil).GetHostNames))
}
